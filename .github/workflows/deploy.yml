name: Deploy to VPS

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Thorough Cleanup
        run: |
          # Stop the application first to release any file locks
          pm2 stop platform-azoozgat || true
          
          # Clean up build artifacts and dependencies
          sudo -n rm -rf /actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform/.next/ || true
          sudo -n rm -rf /actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform/node_modules/ || true
          sudo -n rm -rf /actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform/.cache/ || true
          
          # Clean browser caches by adding a timestamp file that will force reload
          mkdir -p /actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform/public/version
          date > /actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform/public/version/timestamp.txt
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          clean: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --force
      
      - name: Create environment file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env.local
        
      - name: Clean Next.js cache and build
        run: |
          rm -rf .next
          npm run build
      
      - name: Setup PM2
        run: |
          sudo -n npm install -g pm2
          pm2 stop platform-azoozgat || true
          pm2 delete platform-azoozgat || true
          
          # Set proper permissions for the .next directory
          chmod -R 755 .next
          
          # Start with production mode
          NODE_ENV=production pm2 start npm --name "platform-azoozgat" --cwd "/actions-runner/_work/AzoozGAT-Platform/AzoozGAT-Platform" -- start
          pm2 save
          sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u root --hp $HOME || true
      
      - name: Install Caddy if not already installed
        run: |
          if ! command -v caddy &> /dev/null; then
            sudo -n apt update
            sudo -n apt install -y debian-keyring debian-archive-keyring apt-transport-https
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo -n gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo -n tee /etc/apt/sources.list.d/caddy-stable.list
            sudo -n apt update
            sudo -n apt install -y caddy
          fi
      
      - name: Configure Caddy
        run: |
          # Create Caddy configuration file
          sudo -n tee /etc/caddy/Caddyfile > /dev/null << 'EOF'
          platform.azoozgat.com, www.platform.azoozgat.com, 62.171.152.23 {
            # Enable gzip compression
            encode gzip zstd

            # Special handling for Next.js static files
            @static {
              path /_next/static/*
            }
            handle @static {
              header Cache-Control "public, max-age=31536000, immutable"
            }
            
            # Reverse proxy to your Next.js app
            reverse_proxy localhost:3000 {
              header_up Host {host}
              header_up X-Real-IP {remote}
              header_up X-Forwarded-For {remote}
              header_up X-Forwarded-Proto {scheme}
            }
            
            # Log requests for debugging
            log {
              output file /var/log/caddy/platform-access.log
              format console
            }
          }
          EOF
          
          # Reload Caddy to apply new configuration
          sudo -n systemctl reload caddy
          sudo -n systemctl restart caddy || true
      
      - name: Disable Nginx if installed
        run: |
          if command -v nginx &> /dev/null; then
            sudo -n systemctl disable nginx
            sudo -n systemctl stop nginx
          fi
          
      - name: Verify Caddy is running
        run: |
          sudo -n systemctl status caddy
          echo "Deployment complete. Site should be available at https://platform.azoozgat.com"